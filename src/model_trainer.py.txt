import xgboost as xgb  
import pandas as pd  
import pickle  
from sklearn.model_selection import train_test_split  
from sklearn.metrics import mean_squared_error  

def train_xgboost_model(data_path: str, model_path: str):
    df = pd.read_csv(data_path, parse_dates=['Date'], index_col='Date')
    df['Target'] = df['Close'].shift(-1)  # Predict next day's close price  
    df.dropna(inplace=True)  
    
    X = df.drop(columns=['Target'])  
    y = df['Target']  
    
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)  
    
    model = xgb.XGBRegressor(objective='reg:squarederror', n_estimators=100)  
    model.fit(X_train, y_train)  
    
    predictions = model.predict(X_test)  
    error = mean_squared_error(y_test, predictions, squared=False)  
    print(f"Model RMSE: {error}")  
    
    with open(model_path, 'wb') as f:  
        pickle.dump(model, f)  
    
if __name__ == "__main__":
    train_xgboost_model("../data/stock_data.csv", "../models/xgboost_model.pkl")  